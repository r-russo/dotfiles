#!/bin/sh

getColor()
{
    if [ $1 -lt $2 ]; then
        echo $GREEN
    elif [ $1 -lt $3 ]; then
        echo $YELLOW
    else
        echo $RED
    fi
}

PANEL_FIFO=/tmp/panel-fifo
PANEL_HEIGHT=28
PANEL_FONT="Fira Mono-9"
ICON_FONT="FontAwesome-9"
PANEL_WM_NAME=bspwm_panel

. panel_colors

# icons
ICON_CLOCK="%{F$ICON_COLOR}%{T2}%{T-}%{F-}"
ICON_DISKS="%{F$ICON_COLOR}%{T2}%{T-}%{F-}"
ICON_MPD="%{F$ICON_COLOR}%{T2}%{T-}%{F-}"
ICON_VOLUME="%{F$GREEN}%{T2}%{T-}%{F-}"
ICON_VOLUME_LOW="%{F$YELLOW}%{T2}%{T-}%{F-}"
ICON_MUTE="%{F$RED}%{T2}%{T-}%{F-}"
ICON_RAM="%{F$ICON_COLOR}%{T2}%{T-}%{F-}"

ICON_PLAYING="%{T2}%{T-}"
ICON_STOP="%{T2}%{T-}"
ICON_PAUSE="%{T2}%{T-}"

SLEEP_MPD=0.5
SLEEP_RAM=1
SLEEP_VOLUME=1
SLEEP_DISKS=10
SLEEP_DATE=1

if xdo id -a "$PANEL_WM_NAME" > /dev/null ; then
    printf "%s\n" "The panel is already running." >&2
    exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

bspc config top_padding $PANEL_HEIGHT
bspc subscribe report > "$PANEL_FIFO" &
xtitle -sf 'T%s\n' -t 40 > "$PANEL_FIFO" &

# fecha (D)
while true; do
    echo `date +"D$ICON_CLOCK%{F-} %Y-%m-%d - %H:%M:%S"`
    sleep $SLEEP_DATE
done > "$PANEL_FIFO" &

# mpd (M)
while true; do
    STATE=`mpc | head -n 2 | tail -n 1 | awk '{print $1}'`
    TRACK=`mpc | head -n 1`

    if [ "$STATE" == "[playing]" ]; then
        F="$GREEN"
        ICON="$ICON_PLAYING"
    elif [ "$STATE" == "[paused]" ]; then
        F="$YELLOW"
        ICON="$ICON_PAUSE"
    elif [ "$STATE" == "[stopped]" ]; then
        F="$RED"
        ICON="$ICON_STOP"
    fi

    echo "M$ICON_MPD %{A1:urxvt -e ncmpcpp &:}mpd%{A}: %{F$F}%{A1:mpc toggle:}$ICON%{A}%{F-}"

    sleep $SLEEP_MPD
done > "$PANEL_FIFO" &

# disks (F)
while true; do
    FROOT=`df -H | grep -w / | awk '{print $5}' | tr -d '%'`
    FHOME=`df -H | grep -w /home | awk '{print $5}' | tr -d '%'`
    COLOR_ROOT=$(getColor $FROOT 70 90)
    COLOR_HOME=$(getColor $FHOME 70 90)
    echo "F$ICON_DISKS /: %{F$COLOR_ROOT}$FROOT%%{F-} /home: %{F$COLOR_HOME}$FHOME%%{F-}"

    sleep $SLEEP_DISKS
done > "$PANEL_FIFO" &

# volume (V)
while true; do
    VOL=`amixer get Master | tail -n1 | awk '{print $5}' | tr -d '[%]'`
    STATE=`amixer get Master | tail -n1 | awk '{print $6}' | tr -d '[]'`

    if [ $STATE == "on" ]; then
        if [ $VOL -gt 50 ]; then
            ICON=$ICON_VOLUME
        else
            ICON=$ICON_VOLUME_LOW
        fi
    else
        ICON="$ICON_MUTE"
    fi

    echo "V%{A1:pavucontrol &:}$ICON $VOL%%{A}"
    sleep $SLEEP_VOLUME
done > "$PANEL_FIFO" &

# RAM (R)
while true; do
    RAM_USED=`free | head -n 2 | tail -n 1 | awk '{print $6}'`
    RAM_TOTAL=`free | head -n 2 | tail -n 1 | awk '{print $2}'`
    PERC_FREE=$((RAM_USED*100/RAM_TOTAL))
    COLOR=$(getColor $PERC_FREE 70 90)

    echo "R$ICON_RAM %{F$COLOR}$PERC_FREE%%{F-}"
    sleep $SLEEP_RAM
done > "$PANEL_FIFO" &

panel_bar < "$PANEL_FIFO" | lemonbar -a 32 -n "$PANEL_WM_NAME" -g x$PANEL_HEIGHT \
    -f "$PANEL_FONT" -o 0 -f "$ICON_FONT" -o -2 -F "$FG" -B "$BG" | sh &

wid=$(xdo id -a "$PANEL_WM_NAME")
tries_left=20
while [ -z "$wid" -a "$tries_left" -gt 0 ]; do
    sleep 0.05
    wid=$(xdo id -a "$PANEL_WM_NAME")
    tries_left=$((tries_left - 1))
done

[ -n "$wid" ] && xdo above -t "$(xdo id -N Bspwm -n root | sort | head -n 1)" "$wid"

wait
